#include "board.h"

int Pieces_[8][4][4][4] = {
		{/// **0th piece in all 4 forms
			{
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0},
				{0,0,0,0}
			},
		},
		{/// 1st piece in all 4 forms
			{
				{0,0,0,0},
				{0,1,1,0},
				{0,1,1,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,1,1,0},
				{0,1,1,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,1,1,0},
				{0,1,1,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,1,1,0},
				{0,1,1,0},
				{0,0,0,0}
			},
		},
		{/// 2nd piece in all 4 forms
			{
				{0,0,0,0},
				{1,1,1,1},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,0,1,0},
				{0,0,1,0},
				{0,0,1,0},
				{0,0,1,0}
			},
			{
				{0,0,0,0},
				{0,0,0,0},
				{1,1,1,1},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{0,1,0,0},
				{0,1,0,0},
				{0,1,0,0}
			},
		},
		{/// 3th piece in all 4 forms
			{
				{1,0,0,0},
				{1,1,1,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,1,1,0},
				{0,1,0,0},
				{0,1,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{1,1,1,0},
				{0,0,1,0},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{0,1,0,0},
				{1,1,0,0},
				{0,0,0,0}
			},
		},
		{///4th piece with all 4 forms
			{
				{0,0,1,0},
				{1,1,1,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{0,1,0,0},
				{0,1,1,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{1,1,1,0},
				{1,0,0,0},
				{0,0,0,0}
			},
			{
				{1,1,0,0},
				{0,1,0,0},
				{0,1,0,0},
				{0,0,0,0}
			},
		},
		{///5th piece with all 4 forms
			{
				{0,1,0,0},
				{1,1,1,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{0,1,1,0},
				{0,1,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{1,1,1,0},
				{0,1,0,0},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{1,1,0,0},
				{0,1,0,0},
				{0,0,0,0}
			},
		},
		{///6th piece with all 4 forms
			{
				{1,1,0,0},
				{0,1,1,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,0,1,0},
				{0,1,1,0},
				{0,1,0,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,1,1,0},
				{1,1,0,0},
				{0,0,0,0}
			},
			{
				{1,0,0,0},
				{1,1,0,0},
				{0,1,0,0},
				{0,0,0,0}
			},
		},
		{ ///7th piece with all its 4 forms 
			{
				{0,1,1,0},
				{1,1,0,0},
				{0,0,0,0},
				{0,0,0,0}
			},
			{
				{0,1,0,0},
				{0,1,1,0},
				{0,0,1,0},
				{0,0,0,0}
			},
			{
				{0,0,0,0},
				{0,1,1,0},
				{1,1,0,0},
				{0,0,0,0}
			},
			{
				{1,0,0,0},
				{1,1,0,0},
				{0,1,0,0},
				{0,0,0,0}
			},
		},
};
int offset[8][4][4] = {
	{},
	{///1st piece
		{1,1,1,1},
		{1,1,1,1},
		{1,1,1,1},
		{1,1,1,1}
	},
	{///2nd piece
		{1,0,2,0},
		{0,1,0,2},
		{2,0,1,0},
		{0,2,0,1}
	},
	{///3th piece
		{0,1,2,0},
		{0,1,1,1},
		{1,1,1,0},
		{0,2,1,0}
	},
	{///4th piece
		{0,1,2,0},
		{0,1,1,1},
		{1,1,1,0},
		{0,2,1,0}
	},
	{///5th piece
		{0,1,2,0},
		{0,1,1,1},
		{1,1,1,0},
		{0,2,1,0}
	},
	{///6th piece
		{0,1,2,0},
		{0,1,1,1},
		{1,1,1,0},
		{0,2,1,0}
	},
	{///7th piece
		{0,1,2,0},
		{0,1,1,1},
		{1,1,1,0},
		{0,2,1,0}
	}
};

void Board::move_left() {
	if (offset_col + offset[piece][orientation][3] > 0) {
		bool ok = true;
		for (int row = 0; row < 4; row++)
			for (int col = 0; col < 4; col++)
				if (Pieces_[piece][orientation][row][col] && board[offset_row + row + 1][offset_col + col])
					ok = false;
		if(ok)
			offset_col--;
	}
}

void Board::move_rigth() {
	if (offset_col + 4 - offset[piece][orientation][1] < nr_col) {
		bool ok = true;
		for (int row = 0; row < 4; row++)
			for (int col = 0; col < 4; col++)
				if (Pieces_[piece][orientation][row][col] && board[offset_row + row + 1][offset_col + col+2])
					ok = false;
		if (ok)
			offset_col++;
	}

}

void Board::rotate_cw() {
	orientation = (orientation + 1) % 4;
}

void Board::rotate_ccw() {
	orientation = (orientation - 1 + 4) % 4;
}

void Board::drop() {
	period=0;
}